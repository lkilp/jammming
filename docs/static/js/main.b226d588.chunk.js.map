{"version":3,"sources":["util/Spotify.js","Components/SearchBar/SearchBar.js","Components/Track/Track.js","Components/TrackList/TrackList.js","Components/SearchResults/SearchResults.js","Components/Playlist/Playlist.js","Components/App/App.js","reportWebVitals.js","index.js"],"names":["accessToken","SearchBar","props","state","term","prefill","search","bind","handleTermChange","e","preventDefault","this","onSearch","event","setState","target","value","onSubmit","className","placeholder","onChange","React","Component","Track","addTrack","removeTrack","isRemoval","onClick","onAdd","track","onRemove","name","artist","album","renderAction","TrackList","tracks","map","id","SearchResults","searchResults","Playlist","handleNameChange","onNameChange","defaultValue","playlistTracks","onSave","Spotify","getLocalAccessToken","accessTokenMatch","window","location","href","match","expiresInMatch","expiresIn","Number","setTimeout","history","pushState","getAccessToken","token","accessUrl","fetch","headers","Headers","Authorization","then","response","json","jsonResponse","items","artists","uri","savePlaylist","trackUris","length","userId","method","body","JSON","stringify","playlistId","uris","App","playlistName","previousTerm","sessionStorage","getItem","updatePlaylistName","removeItem","find","savedTrack","push","filter","currentTrack","setItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b226d588.chunk.js","sourcesContent":["const clientId = '2069501c1c4d4ecabd193202fa197fab';\nconst redirectUri = 'http://localhost:3000/';\nlet accessToken;\n\nconst Spotify = {\n    getLocalAccessToken() {\n        if (accessToken) {\n            return accessToken;\n        } \n\n        const accessTokenMatch = window.location.href.match(/access_token=([^&]*)/);\n        const expiresInMatch = window.location.href.match(/expires_in=([^&]*)/);       \n        \n        if (accessTokenMatch && expiresInMatch) {\n            accessToken = accessTokenMatch[1];\n            const expiresIn = Number(expiresInMatch[1]);\n            window.setTimeout(() => accessToken = '', expiresIn * 1000); \n            window.history.pushState('Access Token', null, '/');\n            return accessToken;\n        }\n        return null;\n    },\n    getAccessToken() {\n        const token = this.getLocalAccessToken();\n        if(token) { return token; }\n        if (accessToken) {\n            return accessToken;\n        }\n        const accessUrl = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectUri}`\n        window.location = accessUrl;\n    },\n\n    search(term) {\n        const accessToken = Spotify.getAccessToken();\n        return fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, {\n            headers: new Headers({\n                Authorization: `Bearer ${accessToken}`\n            })\n        }).then(response => {\n            return response.json();\n        }).then(jsonResponse => {\n            if (!jsonResponse.tracks) {\n                return [];\n            }\n            return jsonResponse.tracks.items.map(track => ({\n                id: track.id,\n                name: track.name,\n                artist: track.artists[0].name,\n                album: track.album.name,\n                uri: track.uri\n            }))\n        })\n    },\n\n    savePlaylist(name, trackUris) {\n        if (!name || !trackUris.length) {\n            return;\n        }\n\n        const accessToken = Spotify.getAccessToken();\n        const headers = { Authorization: `Bearer ${accessToken}`};\n        let userId;\n\n        return fetch(`https://api.spotify.com/v1/me`, { headers: headers }\n        ).then(response => response.json()\n        ).then(jsonResponse => {\n            userId = jsonResponse.id;\n            return fetch(`https://api.spotify.com/v1/users/${userId}/playlists`,\n            {\n                headers: headers,\n                method: 'POST',\n                body: JSON.stringify({ name: name })\n            }).then(response => response.json()\n            ).then(jsonResponse => {\n                const playlistId = jsonResponse.id;\n                return fetch(`https://api.spotify.com/v1/users/${userId}/playlists/${playlistId}/tracks`, {\n                    headers: headers,\n                    method: 'POST',\n                    body: JSON.stringify({ uris: trackUris}),\n                } )\n            })\n        })\n    }\n}\n\nexport default Spotify;","import React from 'react';\nimport './SearchBar.css'\n\nclass SearchBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {term:props.prefill || ''};\n        this.search = this.search.bind(this);\n        this.handleTermChange = this.handleTermChange.bind(this);\n    }\n    search(e) {\n        e.preventDefault();\n        this.props.onSearch(this.state.term);\n    }\n\n    handleTermChange(event) {\n        this.setState({ term: event.target.value });\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.search} className=\"SearchBar\">\n                <input value={this.state.term} placeholder=\"Enter A Song, Album, or Artist\"\n                        onChange={this.handleTermChange} />\n                <button className=\"SearchButton\">SEARCH</button>\n            </form>\n        )\n    }\n}\n\nexport default SearchBar;","import React from 'react';\nimport './Track.css';\n\nclass Track extends React.Component {\n    constructor(props) {\n        super(props);\n        this.addTrack = this.addTrack.bind(this);\n        this.removeTrack = this.removeTrack.bind(this);\n    }\n\n    renderAction() {\n        if (this.props.isRemoval) {\n            return <button className=\"Track-action\" onClick={this.removeTrack}>-</button>\n        } else {\n            return <button className=\"Track-action\" onClick={this.addTrack}>+</button>;\n        }\n    }\n\n    addTrack() {\n        this.props.onAdd(this.props.track);\n    }\n\n    removeTrack() {\n        this.props.onRemove(this.props.track);\n    }\n\n    render() {\n        return (\n            <div className=\"Track\">\n                <div className=\"Track-information\">\n                    <h3>{this.props.track.name}</h3>\n                    <p>{this.props.track.artist} | {this.props.track.album} </p>\n                </div>\n                {this.renderAction()}\n             </div> \n        )\n    }\n}\n\nexport default Track;","import React from 'react';\nimport './TrackList.css';\n\nimport Track from '../Track/Track';\n\n\nclass TrackList extends React.Component {\n    render() {\n        return (\n            <div className=\"TrackList\">\n                {\n                    this.props.tracks.map(track => {\n                        return <Track track={track}\n                            key={track.id}\n                            onAdd={this.props.onAdd}\n                            onRemove={this.props.onRemove}\n                            isRemoval={this.props.isRemoval} />\n                    })\n                }          \n    </div>\n        )\n    }\n}\n\nexport default TrackList;","import React from 'react';\nimport './SearchResults.css';\n\nimport TrackList from '../TrackList/TrackList';\n\nclass SearchResults extends React.Component {\n    render() {\n        return (\n            <div className=\"SearchResults\">\n                <h2>Results</h2>\n                <TrackList tracks={this.props.searchResults}\n                onAdd={this.props.onAdd} isRemoval={false}/>\n            </div>\n        )\n    }\n}\n\nexport default SearchResults;","import React from 'react';\nimport './Playlist.css';\n\nimport TrackList from '../TrackList/TrackList'\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props)\n        this.handleNameChange = this.handleNameChange.bind(this);\n    }\n    handleNameChange(event) {\n        this.props.onNameChange(event.target.value);\n    }\n\n    render() {\n        return (\n            <div className=\"Playlist\">\n                <input defaultValue={\"New Playlist\"}\n                        onChange={this.handleNameChange}/>\n                <TrackList tracks={this.props.playlistTracks}\n                            onRemove={this.props.onRemove}\n                            isRemoval={true}/>\n                <button className=\"Playlist-save\" onClick={this.props.onSave}>SAVE TO SPOTIFY</button>\n            </div>\n        )\n    }\n}\n\nexport default Playlist;","import React from 'react';\nimport './App.css';\n\nimport SearchBar from '../SearchBar/SearchBar'; \nimport SearchResults from '../SearchResults/SearchResults';\nimport Playlist from '../Playlist/Playlist';\nimport Spotify from '../../util/Spotify';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults: [],\n      playlistName: 'My Playlist',\n      playlistTracks: [],\n      previousTerm: sessionStorage.getItem('term'),\n    };\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n  }\n\n  \n  componentDidMount() {\n    const previousTerm = sessionStorage.getItem('term');\n    sessionStorage.removeItem('term');\n    if(previousTerm) {\n      this.setState({ previousTerm });\n      this.search(previousTerm);\n    }\n  }\n\n  addTrack(track) {\n    let tracks = this.state.playlistTracks;\n    if (tracks.find(savedTrack =>\n      savedTrack.id === track.id)) {\n        return;\n    } \n    tracks.push(track);\n    this.setState({playlistTracks: tracks});\n  }\n\n  removeTrack(track) {\n    let tracks = this.state.playlistTracks;\n    tracks = tracks.filter(currentTrack => currentTrack.id !== track.id);\n\n    this.setState({playlistTracks: tracks});\n  }\n\n  updatePlaylistName(name) {\n    this.setState({ playlistName: name })\n  }\n\n  savePlaylist() {\n    const trackUris = this.state.playlistTracks.map(track => track.uri);\n    Spotify.savePlaylist(this.state.playlistName, trackUris).then(() => {\n      this.setState({\n        playlistName: 'New Playlist',\n        playlistTracks: []\n      })\n    })\n  }\n\n  search(term) {\n    if(!Spotify.getLocalAccessToken()) {\n      sessionStorage.setItem('term', term);\n    }\n    \n    Spotify.search(term).then(searchResults => {\n      this.setState({ searchResults: searchResults})\n    })\n  }\n\n  render() {\n    \n    return (\n      <div>\n        <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n        <div className=\"App\">\n          <SearchBar onSearch={this.search} prefill={this.state.previousTerm} />\n          <div className=\"App-playlist\">\n            <SearchResults searchResults={this.state.searchResults} \n                            onAdd={this.addTrack}/>\n            <Playlist playlistName={this.state.playlistName} \n                      playlistTracks={this.state.playlistTracks}\n                      onRemove={this.removeTrack}\n                      onNameChange={this.updatePlaylistName}\n                      onSave={this.savePlaylist} />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}